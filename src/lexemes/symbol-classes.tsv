lemma	homonym	new_para	symbol
´	1	SYMBOL_PISTE	final-quote
´	2	SYMBOL_PISTE	initial-quote
`	1	SYMBOL_PISTE	final-quote
`	2	SYMBOL_PISTE	initial-quote
<	1	SYMBOL_PISTE	initial-bracket
>	1	SYMBOL_PISTE	final-bracket
-	1	SYMBOL_PISTE	dash
--	1	SYMBOL_PISTE	dash
,	1	SYMBOL_PILKKU	clause-boundary
;	1	SYMBOL_PISTE	clause-boundary
:	1	SYMBOL_PISTE	clause-boundary
!	1	SYMBOL_PISTE	sentence-boundary
!	2	PUNCT_NONSTD_EXCL_LOOP	sentence-boundary
?	1	SYMBOL_PISTE	sentence-boundary
?	2	PUNCT_NONSTD_EXCL_LOOP	sentence-boundary
.	1	SYMBOL_PISTE	sentence-boundary
..	1	SYMBOL_PISTE	sentence-boundary
...	1	SYMBOL_PISTE	sentence-boundary
....	1	SYMBOL_PISTE	sentence-boundary
’	1	SYMBOL_PISTE	final-quote
’	2	SYMBOL_PISTE	initial-quote
’	3	SYMBOL_PISTE	final-quote
’	4	SYMBOL_PISTE	initial-quote
"	1	SYMBOL_PISTE	final-quote
"	2	SYMBOL_PISTE	initial-quote
”	1	SYMBOL_PISTE	final-quote
”	2	SYMBOL_PISTE	initial-quote
»	1	SYMBOL_PISTE	final-quote
»	2	SYMBOL_PISTE	initial-quote
(	1	SYMBOL_PISTE	initial-bracket
)	1	SYMBOL_PISTE	final-bracket
[	1	SYMBOL_PISTE	initial-bracket
]	1	SYMBOL_PISTE	final-bracket
{	1	SYMBOL_PISTE	initial-bracket
}	1	SYMBOL_PISTE	final-bracket
–	1	SYMBOL_PISTE	dash
—	1	SYMBOL_PISTE	dash
›	1	SYMBOL_PISTE	final-bracket
‹	1	SYMBOL_PISTE	initial-bracket
‥	1	SYMBOL_PISTE	sentence-boundary
…	1	SYMBOL_PISTE	sentence-boundary
 	1	SYMBOL_PISTE	space
 	1	SYMBOL_PISTE	space
